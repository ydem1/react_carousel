{"version":3,"sources":["utils/getUniqueId.tsx","components/Carousel.tsx","App.tsx","index.tsx"],"names":["getUniqueId","Math","random","Carousel","images","step","frameSize","itemWidth","animationDuration","useState","index","setIndex","offsetX","setOffsetX","useEffect","updateSlide","newOffsetX","newIndex","className","onClick","currentStep","type","disabled","src","alt","style","width","transform","transition","map","image","length","App","state","steps","selectedStep","framesSize","selectedFrameSize","itemsWidth","selectedItemWidth","animationsDuration","selectedAnimationDuration","handleStepChange","event","setState","target","value","handleFrameSizeChange","handleItemWidthChange","handleAnimationDurationChange","this","htmlFor","name","onChange","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6b7b3e0.chunk.js","sourcesContent":["export const getUniqueId = () => Math.random();\n","import React, { useState, useEffect } from 'react';\nimport { Images } from '../types/Images';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport './Carousel.scss';\n\ntype Props = {\n  images: Images;\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n}) => {\n  const [index, setIndex] = useState(frameSize);\n  const [offsetX, setOffsetX] = useState(0);\n\n  useEffect(() => {\n    setIndex(frameSize);\n    setOffsetX(0);\n  }, [step, frameSize, itemWidth]);\n\n  const updateSlide = (newOffsetX: number, newIndex: number) => {\n    setOffsetX(newOffsetX);\n\n    setIndex(newIndex);\n  };\n\n  const handlePrevSlide = () => {\n    const currentStep = step < index - frameSize\n      ? step\n      : index - frameSize;\n\n    updateSlide(\n      offsetX + (currentStep * (itemWidth + 20)),\n      index - currentStep,\n    );\n  };\n\n  const handleNextSlide = () => {\n    const currentStep = step < images.length - index\n      ? step\n      : images.length - index;\n\n    updateSlide(\n      offsetX - (currentStep * (itemWidth + 20)),\n      index + currentStep,\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <button\n        onClick={handlePrevSlide}\n        type=\"button\"\n        disabled={index <= frameSize}\n      >\n        <img\n          src=\"./img/arrow.jpg\"\n          alt=\"arrow\"\n          className=\"Carousel__btn-img\"\n        />\n      </button>\n\n      <div\n        className=\"Carousel\"\n        style={{ width: `${frameSize * itemWidth + (frameSize - 1) * 20}px ` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={\n            {\n              transform: `translateX(${offsetX}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }\n          }\n        >\n          {\n            images.map(image => (\n              <li key={getUniqueId()}>\n                <img\n                  className=\"Carousel__img\"\n                  style={{ width: `${itemWidth}px` }}\n                  src={image}\n                  alt={image}\n                />\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <button\n        onClick={handleNextSlide}\n        type=\"button\"\n        data-cy=\"next\"\n        disabled={index >= images.length}\n\n      >\n        <img\n          src=\"./img/arrow.jpg\"\n          alt=\"arrow\"\n          className=\"Carousel__btn-img Carousel__btn-img--transform-scaleX\"\n        />\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { Images } from './types/Images';\nimport { getUniqueId } from './utils/getUniqueId';\n\ninterface State {\n  images: Images;\n  steps: number[];\n  selectedStep: number;\n  framesSize: number[];\n  selectedFrameSize: number;\n  itemsWidth: number[];\n  selectedItemWidth: number;\n  animationsDuration: number[];\n  selectedAnimationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    steps: [\n      1,\n      2,\n      3,\n      4,\n      5,\n    ],\n\n    selectedStep: 3,\n\n    framesSize: [\n      1,\n      2,\n      3,\n      4,\n      5,\n    ],\n\n    selectedFrameSize: 3,\n\n    itemsWidth: [\n      130,\n      140,\n      150,\n      160,\n      170,\n      180,\n    ],\n\n    selectedItemWidth: 130,\n\n    animationsDuration: [\n      500,\n      1000,\n      1500,\n      2000,\n      1500,\n      2500,\n      3000,\n      3500,\n    ],\n\n    selectedAnimationDuration: 1000,\n  };\n\n  handleStepChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ selectedStep: +event.target.value });\n  };\n\n  handleFrameSizeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ selectedFrameSize: +event.target.value });\n  };\n\n  handleItemWidthChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ selectedItemWidth: +event.target.value });\n  };\n\n  handleAnimationDurationChange =\n  (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ selectedAnimationDuration: +event.target.value });\n  };\n\n  render() {\n    const {\n      images,\n      steps,\n      selectedStep,\n      framesSize,\n      selectedFrameSize,\n      itemsWidth,\n      selectedItemWidth,\n      animationsDuration,\n      selectedAnimationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n        <section className=\"Control-panel\">\n          <div className=\"Control-panel__select-steps\">\n            <label htmlFor=\"label-step\">\n              Enter the number of steps\n            </label>\n\n            <select\n              name=\"label-step\"\n              onChange={this.handleStepChange}\n              value={selectedStep}\n            >\n              {\n                steps.map(item => (\n                  <option\n                    value={item}\n                    key={getUniqueId()}\n                  >\n                    {item}\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n\n          <div className=\"Control-panel__select-frameSize\">\n            <label htmlFor=\"label-frameSize\">\n              Enter the number of frameSize\n            </label>\n\n            <select\n              name=\"label-frameSize\"\n              onChange={this.handleFrameSizeChange}\n              value={selectedFrameSize}\n            >\n              {\n                framesSize.map(item => (\n                  <option\n                    value={item}\n                    key={getUniqueId()}\n                  >\n                    {item}\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n\n          <div className=\"Control-panel__select-itemsWidth\">\n            <label htmlFor=\"itemsWidthSelect\">\n              Select image width\n            </label>\n\n            <select\n              name=\"itemsWidthSelect\"\n              onChange={this.handleItemWidthChange}\n              value={selectedItemWidth}\n            >\n              {\n                itemsWidth.map(item => (\n                  <option\n                    value={item}\n                    key={getUniqueId()}\n                  >\n                    {item}\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n\n          <div className=\"Control-panel__select-animationsDuration\">\n            <label htmlFor=\"itemsWidthSelect\">\n              Select the duration of the animation\n            </label>\n\n            <select\n              name=\"itemsWidthSelect\"\n              onChange={this.handleAnimationDurationChange}\n              value={selectedAnimationDuration}\n            >\n              {\n                animationsDuration.map(item => (\n                  <option\n                    value={item}\n                    key={getUniqueId()}\n                  >\n                    {item}\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n        </section>\n\n        <Carousel\n          images={images}\n          step={selectedStep}\n          frameSize={selectedFrameSize}\n          itemWidth={selectedItemWidth}\n          animationDuration={selectedAnimationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}